plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // database
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'

    // auth
    implementation group: 'org.bouncycastle', name: 'bcprov-jdk15to18', version: '1.71'
    implementation group: 'org.bouncycastle', name: 'bcpkix-jdk15to18', version: '1.71'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5',
            'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // aws
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3:3.0.1'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // testcontainers
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mysql'
    testImplementation 'org.testcontainers:localstack'

    // queryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // csv
    implementation 'com.opencsv:opencsv:5.7.1'

    // openapi
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(Test).configureEach {
    testLogging {
        exceptionFormat = 'full'
        showStackTraces = true
    }
}

def querydslSrcDir = 'src/main/generated'
clean {
    delete file(querydslSrcDir)
}
tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslSrcDir)
}
